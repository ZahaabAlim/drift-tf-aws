name: Cloud Concierge on Master Branch
on:
 push:
   branches:
     - master
 workflow_dispatch:
jobs:
 cloud-concierge:
   runs-on: ubuntu-latest
   steps:
   # Step 1: Checkout the repository
   - name: Checkout repository
     uses: actions/checkout@v3
   # Step 2: Set up AWS credentials (assuming credentials are stored in GitHub secrets)
   - name: Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v2
     with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: us-east-1  # Change this to your AWS region
   # Step 3: Set up the environment variables for cloud-concierge
   - name: Create environment file
     run: |
       echo "TF_STATE_BUCKET=my-terraform-state-bucket" > my-env-file.env
       echo "AWS_REGION=us-east-1" >> my-env-file.env
       # Add any other environment variables needed
   # Step 4: Pull the cloud-concierge Docker image
   - name: Pull cloud-concierge Docker image
     run: docker pull dragondropcloud/cloud-concierge:latest
   # Step 5: Run the cloud-concierge container
   - name: Run cloud-concierge
     run: |
       docker run --env-file ./my-env-file.env \
       -v ${{ github.workspace }}:/main \
       -v $HOME/.aws:/root/.aws:ro \
       dragondropcloud/cloud-concierge:latest
   # Optional Step 6: Push changes to repository (e.g., if the PR is not automatically created)
   - name: Push changes back to repository
     run: |
       git config --global user.name "GitHub Action"
       git config --global user.email "action@github.com"
       git add .
       git commit -m "Update cloud state"
       git push origin master